// Bindings generated by `windows-bindgen` 0.58.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]
#[cfg(target_arch = "aarch64")]
windows_core::imp::define_interface!(
    EXPERIMENTAL_IPluginAuthenticator,
    EXPERIMENTAL_IPluginAuthenticator_Vtbl,
    0xe6466e9a_b2f3_47c5_b88d_89bc14a8d998
);
#[cfg(target_arch = "aarch64")]
impl core::ops::Deref for EXPERIMENTAL_IPluginAuthenticator {
    type Target = windows_core::IUnknown;
    fn deref(&self) -> &Self::Target {
        unsafe { core::mem::transmute(self) }
    }
}
#[cfg(target_arch = "aarch64")]
windows_core::imp::interface_hierarchy!(EXPERIMENTAL_IPluginAuthenticator, windows_core::IUnknown);
#[cfg(target_arch = "aarch64")]
impl EXPERIMENTAL_IPluginAuthenticator {
    pub unsafe fn EXPERIMENTAL_PluginMakeCredential(
        &self,
        request: *const _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_REQUEST,
    ) -> windows_core::Result<*mut _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_RESPONSE> {
        let mut result__ = core::mem::zeroed();
        (windows_core::Interface::vtable(self).EXPERIMENTAL_PluginMakeCredential)(
            windows_core::Interface::as_raw(self),
            request,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn EXPERIMENTAL_PluginGetAssertion(
        &self,
        request: *const _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_REQUEST,
    ) -> windows_core::Result<*mut _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_RESPONSE> {
        let mut result__ = core::mem::zeroed();
        (windows_core::Interface::vtable(self).EXPERIMENTAL_PluginGetAssertion)(
            windows_core::Interface::as_raw(self),
            request,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn EXPERIMENTAL_PluginCancelOperation(
        &self,
        request: *const _EXPERIMENTAL_WEBAUTHN_PLUGIN_CANCEL_OPERATION_REQUEST,
    ) -> windows_core::Result<()> {
        (windows_core::Interface::vtable(self).EXPERIMENTAL_PluginCancelOperation)(
            windows_core::Interface::as_raw(self),
            request,
        )
        .ok()
    }
}
#[cfg(target_arch = "aarch64")]
#[repr(C)]
pub struct EXPERIMENTAL_IPluginAuthenticator_Vtbl {
    pub base__: windows_core::IUnknown_Vtbl,
    pub EXPERIMENTAL_PluginMakeCredential: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *const _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_REQUEST,
        *mut *mut _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_RESPONSE,
    ) -> windows_core::HRESULT,
    pub EXPERIMENTAL_PluginGetAssertion: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *const _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_REQUEST,
        *mut *mut _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_RESPONSE,
    ) -> windows_core::HRESULT,
    pub EXPERIMENTAL_PluginCancelOperation: unsafe extern "system" fn(
        *mut core::ffi::c_void,
        *const _EXPERIMENTAL_WEBAUTHN_PLUGIN_CANCEL_OPERATION_REQUEST,
    ) -> windows_core::HRESULT,
}
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq)]
pub struct HWND(pub *mut core::ffi::c_void);
impl HWND {
    pub fn is_invalid(&self) -> bool {
        self.0.is_null()
    }
}
impl Default for HWND {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
impl windows_core::TypeKind for HWND {
    type TypeKind = windows_core::CopyType;
}
impl windows_core::imp::CanInto<windows::Win32::Foundation::HANDLE> for HWND {}
impl From<HWND> for windows::Win32::Foundation::HANDLE {
    fn from(value: HWND) -> Self {
        Self(value.0)
    }
}
#[repr(C)]
#[cfg(target_arch = "aarch64")]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub struct _EXPERIMENTAL_WEBAUTHN_PLUGIN_CANCEL_OPERATION_REQUEST {
    pub transactionId: windows_core::GUID,
    pub cbRequestSignature: u32,
    pub pbRequestSignature: *mut u8,
}
#[cfg(target_arch = "aarch64")]
impl windows_core::TypeKind for _EXPERIMENTAL_WEBAUTHN_PLUGIN_CANCEL_OPERATION_REQUEST {
    type TypeKind = windows_core::CopyType;
}
#[cfg(target_arch = "aarch64")]
impl Default for _EXPERIMENTAL_WEBAUTHN_PLUGIN_CANCEL_OPERATION_REQUEST {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[cfg(target_arch = "aarch64")]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub struct _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_REQUEST {
    pub hWnd: HWND,
    pub transactionId: windows_core::GUID,
    pub cbRequestSignature: u32,
    pub pbRequestSignature: *mut u8,
    pub cbEncodedRequest: u32,
    pub pbEncodedRequest: *mut u8,
}
#[cfg(target_arch = "aarch64")]
impl windows_core::TypeKind for _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_REQUEST {
    type TypeKind = windows_core::CopyType;
}
#[cfg(target_arch = "aarch64")]
impl Default for _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_REQUEST {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[cfg(target_arch = "aarch64")]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub struct _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_RESPONSE {
    pub cbEncodedResponse: u32,
    pub pbEncodedResponse: *mut u8,
}
#[cfg(target_arch = "aarch64")]
impl windows_core::TypeKind for _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_RESPONSE {
    type TypeKind = windows_core::CopyType;
}
#[cfg(target_arch = "aarch64")]
impl Default for _EXPERIMENTAL_WEBAUTHN_PLUGIN_OPERATION_RESPONSE {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
